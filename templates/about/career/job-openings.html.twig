{% extends template_layout_name %}

{% block content %}
  <section class="academy_enterprise__page career-job-opening">
    <div class="bg_circle_left"></div>
    <div class="bg_rectangle_left"><img src="/static/static/assets/images/enterprise_left.58e9531.svg" alt=""></div>
    <div class="bg_rectangle_right"><img src="/static/static/assets/images/enterprise_right.e8293ab.svg" alt=""></div>
    <div class="bg_circle_right"><img src="/static/static/assets/images/credential_right.a13c81c.svg" alt=""></div>
    <div class="container career-job-opening-page">
        <div class="resources_public_container">
            <div class="resources_public_title_nav container dark">
                <nav class="d-none d-md-block nav-view" aria-label="breadcrumb" style="--bs-breadcrumb-divider: '&gt;';">
                    {% include('layouts/breadcrumb-col-12.html.twig') %}
                </nav>
                <div class="d-block d-md-none mobile_nav">
                    <span class="back_arrow">&lt; </span>
                    <a href="{{ pimcore_document(12).fullpath }}" class="back_txt">Careers</a>
                </div>
            </div>
        </div>
        {# CONTENT #}
        <h1>{{pimcore_input('pageTitle', {'placeholder': 'Job Openings'})}}</h1>
        <div class="row spare-column">
            {% if editmode %}
                {{ pimcore_relations('objectsAll',{
                    "types": ["object"],
                    "classes" : [
                        "Career"
                    ]
                }) }}
            {% else %}
                <div class="col-lg-8 col-md-12">
                    {% set list = pimcore_relations('objectsAll', { 'orderKey': 'releaseDate', 'order': 'desc' }) %}
                    <div class="course_result">
                        <div>
                        <span>{{ list|length }} Job(s)</span>
                        </div>
                        <div class="sortBy">
                            <span>Sort by</span>
                            <div class="dropdown-container">
                                <div class="dropdown-header">
                                    <span class="title">Newest</span>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="7" height="5" fill="none">
                                        <path stroke="#fff" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.25"
                                        d="m1 1 3 3 3-3" />
                                    </svg>
                                </div>
                                <ul class="dropdown-list">
                                    <li data-value="newest" class="active">Newest</li>
                                    <li data-value="az">A-Z</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="course_content job-opening-content">
                    {% if list is not empty %}
                        {% for interested in list %}
                            <a href="{{ interested }}_{{ interested.getId() }}" class="course_content_item" data-title="{{ interested.title }}" data-date="{{ interested.releaseDate|date('Y-m-d') }}">
                                <div class="course_content_item_center">
                                    <div class="content_top">
                                    <div class="content_title">{{ interested.title }}</div>
                                    </div>
                                    <div class="time">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="10" height="9" fill="none">
                                        <path stroke="#470A68" stroke-linecap="round" stroke-linejoin="round"
                                        d="M5 8.5a4 4 0 1 0 0-8 4 4 0 0 0 0 8Z" />
                                        <path stroke="#470A68" stroke-linecap="round" stroke-linejoin="round"
                                        d="m6.38 5.88-1.51-.94V2.41" />
                                    </svg> 
                                    <span>Posted on {{ interested.releaseDate|date("j M Y") }}</span>
                                    </div>
                                </div>
                                <div class="job-opening-right">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="28" height="21" fill="none">
                                    <path stroke="#470A68" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"
                                        d="M26.83 10.5H1.17M17.67 19.67l9.16-9.17M17.67 1.33l9.16 9.17" />
                                    </svg>
                                </div>
                            </a>
                        {% endfor %}
                    {% endif %}
                    </div>
                </div>
            {% endif %}
            <div class="col-lg-4 col-md-0 cv-container">
            <div class="cv-container-wrapper">
                <h2>
                    {{ pimcore_input('cardTitle',{'placeholder':"Can't find the right role?"}) }}
                </h2>
                <p>{{ pimcore_input('cardDescription', {'placeholder': "If you don’t see the perfect fit in our job listings, don’t worry! We’re always looking for talented
                individuals to join our team. Send us your CV, and we’ll keep you in mind for future opportunities."})}}</p>
                {{ pimcore_link('cardLink')}}
            </div>
            </div>
        </div>
        <div class="space-60"></div>
    </div>
        <!-- Discover Section -->
        {{ pimcore_areablock("toold", {
            "allowed": [
                "advisory-tools","advisory-explore","careers-overview-headlines", "careers-discover-tools"
            ]
        }) }}
    </section>
  <script src="/static/static/js/shares.js?v={{ random() }}"></script>
  <script src="http://vjs.zencdn.net/5.4.4/video.js"></script>
  <script>
    $(function () {
      var obj = $("iframe");
      if (obj){
        obj.attr('class','content_img');
      }

    })
  </script>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
        const dropdownContainer = document.querySelector(".dropdown-container");
        const dropdownHeader = document.querySelector(".dropdown-header");
        const dropdownList = document.querySelector(".dropdown-list");
        const dropdownItems = document.querySelectorAll(".dropdown-list li");
        const dropdownTitle = document.querySelector(".dropdown-header .title");
        const jobListContainer = document.querySelector(".job-opening-content");
        const jobItems = Array.from(document.querySelectorAll(".course_content_item"));

        function sortJobs(criteria) {
            let sortedJobs = [];

            if (criteria === "az") {
                sortedJobs = jobItems.sort((a, b) => {
                    return a.dataset.title.localeCompare(b.dataset.title);
                });
            } else if (criteria === "newest") {
                sortedJobs = jobItems.sort((a, b) => {
                    return new Date(b.dataset.date) - new Date(a.dataset.date);
                });
            }

            // Re-append sorted items to the container
            jobListContainer.innerHTML = "";
            sortedJobs.forEach(item => {
                jobListContainer.appendChild(item);
            });
        }

        dropdownHeader.addEventListener("click", () => {
            dropdownContainer.classList.toggle("open");
        });

      dropdownItems.forEach(item => {
        item.addEventListener("click", (event) => {
            // Remove "active" class from all items
            dropdownItems.forEach(item => item.classList.remove("active"));

            // Add "active" class to the clicked item
            event.target.classList.add("active");

            // Update the dropdown header title
            dropdownTitle.textContent = event.target.textContent;

            // Close the dropdown
            dropdownContainer.classList.remove("open");
            const sortValue = event.target.getAttribute("data-value");
            sortJobs(sortValue);
        });
      });

      document.addEventListener("click", (event) => {
        if (!dropdownContainer.contains(event.target)) {
          dropdownContainer.classList.remove("open");
        }
      });
    });
  </script>
{% endblock %}
